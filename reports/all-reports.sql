-- Relatório 1: estados dos clientes que compraram o mesmo livro

-- View com Inner join: name livro, id livro
-- Case/when: número DDD e sigla estado

CREATE OR ALTER VIEW vw_same_books_client AS (SELECT B.NAME AS NAME_BOOK, B.ID AS ID_BOOK, C.ID_BOOK AS BOOK_ID, C.NAME AS NAME_CLIENT, C.PHONE_NUMBER AS PHONE_CLIENT FROM book B INNER JOIN client C ON B.ID = C.ID_BOOK);

SELECT * FROM vw_same_books_client;

SELECT NAME_BOOK, ID_BOOK, NAME_CLIENT, PHONE_CLIENT,
CASE
	WHEN PHONE_CLIENT LIKE '%(21)%' THEN 'RJ'
	WHEN PHONE_CLIENT LIKE '%(11)%' THEN 'SP'
	WHEN PHONE_CLIENT LIKE '%(47)%' THEN 'SC'
	ELSE 'Estado não encontrado' END
FROM vw_same_books_client;

-- Relatório 2: vendas totais por livros/mês

-- Nome do livro e id (book)
-- View: inner join pelo id. exibir ids, quantidade e preço livro. no where inserir datas.

CREATE OR ALTER VIEW VM_PRICES_QUANTITY_BOOK AS 
(SELECT BOOKS_PRICES.ID_BOOK AS BOOK_ID, BOOKS_PRICES.PRICE, BOOKS_SALES.QUANTITY FROM BOOKS_PRICES INNER JOIN BOOKS_SALES
ON BOOKS_PRICES.ID_BOOK = BOOKS_SALES.ID_BOOK WHERE YEAR(BOOKS_SALES.DATE_SALE) = 2020 AND MONTH(BOOKS_SALES.DATE_SALE) = 10);

-- Preço e quantidade livros

SELECT * FROM VM_PRICES_QUANTITY_BOOK;

-- Vendas totais mensais 

SELECT SUM(PRICE * QUANTITY) AS TOTAL_SALES_BOOKS_MONTH FROM VM_PRICES_QUANTITY_BOOK;

-- Relatório 3: vendas totais por cliente/mês

CREATE OR ALTER VIEW VM_SALES_CLIENT_MONTH AS (SELECT DISTINCT (VM_PRICES_QUANTITY_BOOK.PRICE * VM_PRICES_QUANTITY_BOOK.QUANTITY) AS TOTAL_SALES, BOOKS_SALES.ID_CLIENT FROM VM_PRICES_QUANTITY_BOOK INNER JOIN BOOKS_SALES
ON BOOKS_SALES.ID_BOOK = VM_PRICES_QUANTITY_BOOK.BOOK_ID WHERE YEAR(BOOKS_SALES.DATE_SALE) = 2020 AND MONTH(BOOKS_SALES.DATE_SALE) = 10);

SELECT ID_CLIENT, SUM(TOTAL_SALES) AS TOTAL_SALES_CLIENT FROM VM_SALES_CLIENT_MONTH GROUP BY ID_CLIENT;






